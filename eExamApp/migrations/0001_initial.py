# Generated by Django 4.2.1 on 2023-06-20 23:06

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('functional_ID', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teacher_name', models.CharField(max_length=100, null=True, unique=True)),
                ('password', models.CharField(max_length=100, null=True)),
                ('phone', models.IntegerField(unique=True)),
                ('email', models.EmailField(max_length=100, null=True, unique=True)),
            ],
            options={
                'db_table': 'Admin',
            },
        ),
        migrations.CreateModel(
            name='Decision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('decision_name', models.CharField(max_length=100, null=True, unique=True)),
                ('decision_PDF', models.CharField(max_length=1000, null=True, unique=True)),
            ],
            options={
                'db_table': 'Decision',
            },
        ),
        migrations.CreateModel(
            name='Exam_Models',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True, unique=True)),
                ('exam_duration', models.CharField(max_length=100, null=True)),
                ('exam_date', models.DateField()),
                ('exam_time', models.TimeField()),
                ('model_state', models.IntegerField(default=0)),
                ('decision_ID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='eExamApp.decision')),
            ],
            options={
                'db_table': 'Exam_Models',
            },
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level_name', models.CharField(max_length=30, null=True, unique=True)),
            ],
            options={
                'db_table': 'Level',
            },
        ),
        migrations.CreateModel(
            name='Specialization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specialization_name', models.CharField(max_length=100, null=True, unique=True)),
            ],
            options={
                'db_table': 'Specialization',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('functional_ID', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teacher_name', models.CharField(max_length=100, null=True, unique=True)),
                ('password', models.CharField(max_length=100, null=True)),
                ('phone', models.IntegerField(unique=True)),
                ('email', models.EmailField(max_length=100, null=True, unique=True)),
                ('qualified', models.CharField(max_length=200, null=True)),
            ],
            options={
                'db_table': 'Teacher',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('academic_ID', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_name', models.CharField(max_length=100, null=True, unique=True)),
                ('password', models.CharField(max_length=100, null=True)),
                ('entry_date', models.DateTimeField(default=datetime.datetime.now, null=True)),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='eExamApp.level')),
                ('specialization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='eExamApp.specialization')),
            ],
            options={
                'db_table': 'Student',
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_result', models.IntegerField(null=True)),
                ('decision_ID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='eExamApp.decision')),
                ('student_ID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='eExamApp.student')),
            ],
            options={
                'db_table': 'Result',
            },
        ),
        migrations.CreateModel(
            name='Exam_Models_Questions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=500, null=True)),
                ('answer_number', models.IntegerField()),
                ('options', models.CharField(max_length=2000, null=True)),
                ('model_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='eExamApp.exam_models')),
            ],
            options={
                'db_table': 'Exam_Models_Questions',
            },
        ),
        migrations.AddField(
            model_name='exam_models',
            name='level_ID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='eExamApp.level'),
        ),
        migrations.AddField(
            model_name='exam_models',
            name='specialization_ID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='eExamApp.specialization'),
        ),
        migrations.AddField(
            model_name='exam_models',
            name='teacher_ID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='eExamApp.teacher'),
        ),
        migrations.CreateModel(
            name='Decision_And_Specialization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('decision_ID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='eExamApp.decision')),
                ('specialization_ID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='eExamApp.specialization')),
                ('teatcher_ID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='eExamApp.teacher')),
            ],
            options={
                'db_table': 'Decision_And_Specialization',
            },
        ),
        migrations.CreateModel(
            name='Decision_And_Level',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('decision_ID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='eExamApp.decision')),
                ('level_ID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='eExamApp.level')),
            ],
            options={
                'db_table': 'Decision_And_Level',
            },
        ),
        migrations.CreateModel(
            name='Approach',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('decision_type', models.CharField(max_length=10, null=True)),
                ('decision_ID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='eExamApp.decision')),
                ('teatcher_ID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='eExamApp.teacher')),
            ],
            options={
                'db_table': 'Approach',
            },
        ),
    ]
